# О Packer

На этом уроке речь пойдёт об инструменте Packer. Он позволяет удобно создавать образы ВМ.

## Для чего нужны образы

Когда вы завершаете создавать проект, нужно перенести его из тестовой среды в рабочую. И тут перед вами встают две проблемы. Во-первых, чтобы решение гарантированно работало, рабочая среда должна минимально отличаться от той, в которой проект создавался и тестировался. И во-вторых, проект нужно тиражировать, т. е. придётся много раз устанавливать и настраивать ПО на серверах или облачных платформах. Чтобы ускорить процесс и меньше ошибаться, лучшее решение — создать шаблон: образ ВМ с настроенным софтом.

Готовые образы, доступные в [маркетплейсе](https://cloud.yandex.ru/marketplace), содержат только разные версии операционных систем или наборы программ. Такие образы не решают проблему быстрого масштабирования проекта. Образ с софтом, который нужен именно вам, как раз можно создать с помощью [Packer](https://www.packer.io/) — продукта компании HashiCorp. Packer умеет создавать образы для разных платформ, в том числе Yandex Cloud.

[Установите Packer](https://www.packer.io/intro/getting-started/install.html). Он поддерживает все популярные операционные системы — Windows, macOS, Linux и FreeBSD.

> Для установки последней версии понадобится:
>
> 1. Скачать дистрибутив Packer для вашей ОС также можно с [зеркала Yandex Cloud](https://hashicorp-releases.yandexcloud.net/packer/).
>
> 2. Распаковать (будет просто один файл packer)
>
> 3. Переместить файл в PATH
>
>    Для этого посмотреть адреса:
>
>    `echo $PATH`
>
>    И переместить из места где сейчас файл, в нужное место
>
>    `mv ~/Downloads/packer /usr/local/bin/`
>
> 4. Обновить консоль

## Как создать образ при помощи Packer

Packer работает так: на входе вы даёте ему текстовый файл — **спецификацию** — с описанием сборки образа, а на выходе получаете готовый образ. Все просто!

Для примера давайте создадим образ с Ubuntu и веб-сервером NGINX. Описание образа можно составить на языке HCL ([HashiCorp Language](https://www.packer.io/docs/templates/hcl_templates)) или с помощью обычного JSON. Вариант с HCL более современный, так что рассмотрим именно его.

Если у вас есть готовые конфигурации в JSON, то их можно конвертировать в HCL с помощью команды [packer hc2_upgrade](https://www.packer.io/docs/commands/hcl2_upgrade).

Наш образ `my-ubuntu-nginx` будет довольно простым. Для его создания достаточно такой спецификации:

```
source "yandex" "ubuntu-nginx" {
  token               = "<OAuth-токен>"
  folder_id           = "<идентификатор_каталога>"
  source_image_family = "ubuntu-2004-lts"
  ssh_username        = "ubuntu"
  use_ipv4_nat        = "true"
  image_description   = "my custom ubuntu with nginx"
  image_family        = "ubuntu-2004-lts"
  image_name          = "my-ubuntu-nginx"
  subnet_id           = "<идентификатор подсети>"
  disk_type           = "network-ssd"
  zone                = "ru-central1-a"
}
 
build {
  sources = ["source.yandex.ubuntu-nginx"]
 
  provisioner "shell" {
    inline = ["sudo apt-get update -y", 
              "sudo apt-get install -y nginx", 
              "sudo systemctl enable nginx.service"
             ]
  }
}
```

В секции `source` указывается, что собирать образ мы будем именно в Yandex Cloud. В документации Packer есть раздел с [настройками, специфичными для Yandex Cloud](https://www.packer.io/docs/builders/yandex).

Packer должен аутентифицироваться в Yandex Cloud, чтобы создать образ от вашего имени. Есть [несколько способов](https://www.packer.io/docs/builders/yandex#authentication) сделать это. В конфигурации выше, например, задан ключ `token`. Еще один способ — записать [IAM-токен](https://cloud.yandex.ru/docs/iam/concepts/authorization/iam-token) или [OAuth-токен](https://cloud.yandex.ru/docs/iam/concepts/authorization/oauth-token) в переменную окружения `YC_TOKEN`, тогда в самой спецификации можно дополнительно ничего не указывать.

В параметре `image_name` мы указываем имя образа.

В секции `provisioner` — команды, которые нужно выполнить при сборке образа. В нашем случае это установка NGINX.

> Для нахождения ID:
>
> 1. token = "<OAuth-токен>"
>
>    нужно посмотерть настроийки профиля CLI в config (Manage Yandex Cloud CLI configuration)
>
>    `yc config list`
>
>    в результате выведется токен
>
> 2.  folder_id = "<идентификатор_каталога>"
>
>    нужно смотреть в ресурсах resource-manager (Manage Yandex Resource Manager resources)
>
>    там на выбор будет облако или папки
>
>    `yc resource-manager folder list`
>
> 3. subnet_id = "<идентификатор подсети>"
>
>    Для этого нужно перейти в vpc (Manage Yandex Virtual Private Cloud resources)
>
>    `yc vpc subnet list`
>
>    выдаст все подсети и их краткие данные

Сохраним конфигурацию в файл `my-ubuntu-nginx.pkr.hcl` и попросим Packer на его основе создать образ ВМ:

`packer build <путь_к_my-ubuntu-nginx.pkr.hcl>`

Остальные параметры, которые можно использовать в спецификации, подробно разобраны в [документации Packer](https://www.packer.io/docs/).

Можно хранить спецификации для Packer (текстовые файлы) в системе контроля версий, а значит, можно отслеживать изменения, откатывать к более раннему состоянию, смотреть, кто и когда что-то поменял. Как мы уже говорили, такой подход называется Infrastructure as Code.



> **Packer нужен, чтобы ...**
>
> создавать образы ВМ для определенной платформы
>
> тиражировать ВМ на основе готового публичного образа
>
> создавать универсальные образы ВМ, которые можно использовать на любой платформе
>
> (ответ) - (1)
>
> .
>
> **Секция `source` в конфигурации служит для описания ...**
>
> Всех платформ, с которыми может использоваться образ. Все платформы перечисляются в одной секции `source`
>
> Платформы, с которой может использоваться образ. В конфигурации может быть несколько секций `source`
>
> Платформы, с которой может использоваться образ. В конфигурации может быть только одна секция `source`
>
> (ответ) - (3)

4. После того как команда отработает, убедитесь, что образ появился в каталоге. Для этого в консоли управления перейдите в сервис **Compute Cloud**. Найдите образ на вкладке **Образы**.

![image](https://code.s3.yandex.net/Cloud/CloudEngineer/DevOps/07/01.png)

5. Перейдите на вкладку **Виртуальные машины** и начните создавать ВМ.

 Раньше для создания загрузочного диска вы выбирали один из публичных образов, например Ubuntu 20.04. Теперь вместо этого переключитесь на вкладку **Пользовательские**. Нажмите кнопку **Выбрать** и в открывшемся окне переключитесь на вкладку **Образ**.

 Выберите созданный образ и нажмите **Применить**.

 Из образа создастся загрузочный диск.

![image](https://code.s3.yandex.net/Cloud/CloudEngineer/DevOps/07/02.png)

6. Завершите создание ВМ.
7. Проверьте ВМ: введите её IP-адрес в адресную строку браузера. Убедитесь, что веб-сервер работает.
8. Удалите ВМ: на следующих уроках она не понадобится. А вот образ удалять не стоит.

------

