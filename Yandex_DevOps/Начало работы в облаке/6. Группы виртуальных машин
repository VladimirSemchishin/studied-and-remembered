### Зачем нужны группы виртуальных машин

Управлять большим кол-ом ВМ в ручную не просто, есть риск не отследить программный сбой или пиковую нагрузку и сервис ляжет.

Для этого и существует управление группами (или Instance Groups). Можно сгруппировать однотипные ВМ, которые могут находиться в разных зонах доступности, а затем определить, по каким правилам система работает с группами.

Все ВМ в группе автоматически создаются по шаблону. 

> Вы заполните его параметры при формировании группы. Шаблон описывает конфигурацию машины: какие ей нужны системные ресурсы, как создать дополнительный диск, какие сетевые параметры применить, создавать ли пользователей в системе автоматически и т.д.

Создание, обновление и удаление ВМ в группах выполняется от имени так называемого [сервисного аккаунта](https://cloud.yandex.ru/docs/iam/concepts/users/service-accounts). Это учетная запись со специфичным набором привилегий (например, административным). Группе ВМ можно присвоить только один сервисный аккаунт, созданный в том же самом каталоге.

Вы также можете использовать сервисный аккаунт для работы с другими API Yandex Cloud (например для интеграции групп ВМ с сетевым балансировщиком).

### Создание группы виртуальных машин

По алгоритму из 2 урока 6 темы

**Сервисный аккаунт** - необходим для возможности создавать, обновлять и удалять ВМ в группе, ему нужно назначить роль `editor`

По умолчанию все операции в группе ВМ выполняются от имени сервисного акк.

**Шаблон виртуальной машины** - создается как и сама ВМ, по нему Instance Groups будет создавать новые ВМ.

**Блок "В процессе создания и обновления разрешено"**

- **Добавлять выше целевого значения** 

  > (на сколько ВМ можно превышать размер группы)

- **Уменьшать относительно целевого значения** 

  > (на сколько ВМ можно уменьшать размер группы)

- **Одновременно создавать** 

  > (сколько ВМ можно сразу создавать в группе)

- **Время запуска** 

  > (сколько времени должно пройти, прежде чем будут пройдены все проверки состояния и ВМ начнет получать нагрузку)

- **Одновременно останавливать** 

  > (сколько ВМ можно сразу удалять) 

- **Останавливать машины по стратегии** — `Принудительная`**.** 

  > При принудительной стратегии Instance Groups самостоятельно выбирает, какие ВМ остановить.

### Автоматическое восстановление

Чтобы ВМ простаивала как можно меньше, Instance Groups регулярно проверяет состояние ВМ (отзывчивость приложения). Если он обнаружит какие то неполадки, то будет действовать по выбранному сценарию: перезапускать ВМ или создавать новую

**Способ автоматического восстановления при сбое** зависит от настройки политики развертывания:

- Если разрешили превышать целевой размер группы

  > (поле **Добавлять выше целевого значения**), Instance Groups будет создавать ВМ вместо не прошедших проверку.

- Если разрешили уменьшать целевой размер группы

  > (поле **Уменьшать относительно целевого значения)**, Instance Groups перезагрузит ВМ.

- Если не известно заранее, достаточно ли будет перезагрузки, то следует комбинировать вышеуказанные способы восстановления 

  > Когда одна из ВМ не пройдет проверку, Instance Groups начнет одновременно перезапускать эту машину и создавать новую. ВМ, которая первая пройдет все проверки, начнет работать, а вторая будет удалена.
  >
  > Старые машины не удаляются до тех пор, пока не созданы новые. А если в процессе создания новой ВМ все машины в группе станут работоспособны, то сервис отменит её создание.

Автоматическое восстановление прерываемых ВМ начнётся только тогда, когда в зоне доступности будет достаточно вычислительных ресурсов. Иногда это занимает немало времени.

### Автоматическое масштабирование

это когда система сама отслеживает потребность в ВМ и добавлять их, а при снижении нагрузки убирать лишние, чтобы экономить ресурсы и деньги.

Для этого нужно:

1. Создать группу ВМ

2. Указать какие метрики отслеживать, обычно это:

   нагрузка на CPU 

   > при загруженном на 100% процессоре сервис попросту перестаёт отзываться на действия посетителей. Можно использовать и свои метрики (например время ответа сервиса).

3. Указать целевое значение метрики

   > Например **загрузка CPU** — в среднем не больше 50%.

Но если нагрузка на ресурсы не равномерная, например если у пользователей есть возможность выгружать данные из БД в таком случае среднее значение метрики может меняться . И если после каждого всплеска и спада, удалять и создавать ВМ - это будет дорого.

По этому кол-во ВМ регулируется параметрами:

- Период стабилизации

  > время в течении которого кол-во ВМ не может быть уменьшено, даже если ср. значение загрузки CPU очень сильно упало. Отсчет начинается с момента принятия сервисом последнего из решений увеличить размер группы. Суть в том, что если за это время всплеск повториться, то группе будет доступна еще хоть одна ВМ, которая перехватит часть запросов.

- Время на разогрев ВМ

  > период времени после запуска ВМ, в течении которого значения метрик этой ВМ, связанные с потреблением ресурсов, будут проигнорированы, а в место них ср. значение по группе. Это позволяет не учитывать рост нагрузки при запуске самой ВМ.  

- Промежуток измерения нагрузки

  > период времени для усреднения значений измеряемых метрик. Сервис измеряет значения метрик с частотой несколько раз в минуту. Но принимать решение об изменении размера группы на основании только одного полученного значения не имеет смысла — например, нагрузка CPU может резко вырасти до 100%, а затем упасть до 10% в течение буквально пары секунд.  Соотв. для менее чувствительной регулировки нужен усредненный показатель.

> Вы также можете установить в [Yandex Monitoring](https://cloud.yandex.ru/docs/monitoring/quickstart) пользовательские метрики. Например, среднее время ответа сервиса. Укажите имя метрики и ее целевое значение. Если оно будет превышено, Instance Groups создаст дополнительные машины для распределения нагрузки.

### Автоматическое масштабирование под нагрузкой

Алгоритм создания масштабируемой группы под нагрузкой в [5 уроке 6 темы](https://practicum.yandex.ru/trainer/ycloud/lesson/105e288d-01c5-41da-a240-82719f7523b6/) 

**Параметры масштабирования:**

- Тип автомасштабирования — `зональное`. 

  > При зональном автомасштабировании количество ВМ регулируется отдельно в каждой зоне доступности, указанной в настройках группы.

- Минимальное количество ВМ в зоне — `2`. 

  > Сервис Instance Groups не будет удалять ВМ в зоне доступности, если их там всего две.

- Максимальный размер группы — `4`. 

  > Instance Groups не будет создавать ВМ, если их уже четыре. В этот раз размер загрузочного диска ВМ — 50 ГБ, поэтому с учётом квот на суммарный объём SSD-дисков в одном облаке смогут запуститься четыре ВМ.

- Промежуток измерения загрузки — `60 секунд`.

  > (это период усреднения: время, за которое следует усреднять замеры нагрузки для каждой ВМ в группе) 

- Время на разогрев ВМ — `3 минуты`. 

  > В течение этого времени ВМ не учитывается в измерении средней нагрузки на группу. Фактически данное время мы можем определить, измерив, как быстро запускается ВМ.

- Период стабилизации — `5 минут`. 

  > Отсчитывается с момента, когда Compute Cloud принял последнее решение о том, что количество ВМ в группе нужно увеличить.

- Начальный размер группы — `4`. 

  > Это количество ВМ, которое следует создать вместе с группой.

**Состояния группы**

- Creating instance — ВМ создаётся и запускается.

- Awaiting warmup duration — ВМ начинает принимать сетевой трафик.

  > ВМ в этом состоянии на протяжении периода прогрева, значение метрик у этой ВМ заменяются на метрики уже существующих, пока не закончится прогрев

- Running actual — ВМ запущена, на неё подается сетевой трафик, пользовательские приложения работают.

### Воссоздание виртуальных машин в группе

Чтобы проверить работоспособность настроек группы виртуальных машин, необходимо:

1. Зайти через ssh на ВМ которые работают при постоянной нагрузке (в моем случае из 4 машин осталось 2)

2. Установить приложение для стресс-тестирования Linux-систем на каждую из двух ВМ

   `sudo apt-get install stress`

3. Запустить установленное приложение для каждой ВМ
   `stress -c 2`

   > Аргумент `-c` значит что при тестировании будет нагружаться процессор, а число после - это кол-во ядер процессора, которые будут нагружаться. Чтобы эксперимент удался нужно выбрать то число ядер как в шаблоне

4. На вкладке со страницей мониторинга на графике **Average CPU utilization in ru-central1-a** следите за тем, как усреднённое значение нагрузки будет постепенно расти.
   Как только усредненное значение нагрузки превысит порог, червис Instance Groups начнет прогревать две доп. ВМ и вводить их в строй. Это можно увидить на странице Группы виртуальных машин.

5. Остановить стресс тест можно командой **Ctrl + C**

   Как только во время теста запустятся оставшиеся 2 машины, значение нагрузки процессоров в группе упадет до 50%, поскольку первая половина ВМ была нагружена полностью, а вторая не загружена вовсе. 

   Остановив тест на 1 машине нагрузка упадет до 25% и Instance Groups и удалит лишнюю. После остановки теста на оставшейся вскоре останется 2 машины как и было.

   