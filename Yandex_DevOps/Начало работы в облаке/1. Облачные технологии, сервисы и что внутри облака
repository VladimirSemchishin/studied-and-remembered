### Что такое облачные технологии

Облачные платформы позволяют арендовать IT-ресурсы: серверы, базы данных, IP-адреса, сетевую инфраструктуру или даже нейросети.

**Преимущества:**

- Разделение ответственности

  > вы как пользователь не беспокоитесь об издержках владения техникой и её обслуживания. Сервер вышел из строя, жёсткий диск перестал работать, сисадмин на больничном? Всё это не ваша головная боль. Вы можете сосредоточиться на своём продукте или бизнесе.

- Масштабируемость 

  > не требуется докупать, устанавливать, настраивать физическое оборудование и иметь для всего этого специалиста, можно в пару кликов увеличить вычислительные мощности 

- Экономия

  > Во-первых, при аналогичном для бизнеса результате вы экономите время, деньги и усилия, которые пришлось бы потратить на техническую поддержку оборудования.
  >
  > Во-вторых, вы платите только за то, чем пользуетесь. Например, если вы остановили свою виртуальную машину, то оплачивать её вычислительные ресурсы не нужно. 
  >
  > Но нужно платить за бронирование

Облачная платформа предоставляет вам IT-инфраструктуру и сервисы в аренду. Вы пользуетесь ими, когда они нужны, и освобождаете, когда в них больше нет необходимости. Такой принцип аренды называется **as a Service** — как сервис.

Три уровня

- **Infrastructure** as a Service (**IaaS**)

  базовый уровень, в него входит аренда виртуальных серверов, сетей и всего что с ними связано.

  > С помощью IaaS вы можете отправить в облако сайт, бэкэнд мобильного приложения, систему Continuous Integration для разработчиков или 1C для бухгалтерии. Кроме того, вы можете загружать и использовать собственные образы.

- **Platform** as a Service (**PaaS**)

  позволяет разворачивать с облаке современные веб-приложения, не думая об инфраструктурных элементах: ВМ и сетях. Это уровень поверх Infrastructure as a Service

  > Пример PaaS — управляемые базы данных (БД). Вам необязательно устанавливать и администрировать БД на виртуальной машине: купите БД нужного размера с автоматическим резервным копированием и другими полезными возможностями и сразу же начните пользоваться ей

- **Software** as a Service (**SaaS**)

  оплата за готовый софт, который развернут в облаке с помощью инфраструктурных и платформенных сервисов 

  > Пример SaaS — GitLab, система для совместного управления кодом в командах разработки. Вы получаете готовое решение и не думаете о том, как оно устроено.

### Облачные сервисы

Сервисы Yndex Cloud делятся на 9 групп:

- **Инфраструктура и сеть** — инфраструктурные сервисы для обработки данных, безопасного доступа к ним и обмена трафиком.

  > Сервисы этой группы позволяют:
  >
  > - разворачивать виртуальные серверы и сеть между ними (Yandex Compute Cloud, Yandex Virtual Private Cloud, Yandex Cloud Interconnect);
  > - адаптировать конфигурацию виртуальных машин под изменяющиеся нагрузки, строить отказоустойчивые решения (Yandex Network Load Balancer и Yandex Application Load Balancer);
  > - хранить данные в объектном хранилище (Yandex Object Storage);
  > - повышать безопасность решений (Yandex DDoS Protection);
  > - создавать API-шлюзы (Yandex API Gateway).

- **Платформа данных** — управление базами данных и кластерами, масштабируемое хранение данных, сбор и визуализация метрик и данных.

  > Сервисы **Платформы данных** позволяют:
  >
  > - разворачивать кластеры баз данных (Managed Service for PostgreSQL, ClickHouse, MongoDB, MySQL, Redis, SQL Server, Apache Kafka, Elasticsearch, Greenplum, YDB);
  > - визуализировать и анализировать данные (Yandex DataLens);
  > - управлять кластерами Apache Hadoop (Yandex Data Proc);
  > - переносить базы данных с помощью Yandex Data Transfer;
  > - создавать очереди для обмена сообщениями между компонентами распределённых приложений и микросервисов (Yandex Message Queue).

- **Контейнерная разработка** — управление кластерами Kubernetes и Docker-образами, а также для запуска контейнеризированных приложений без Kubernetes

- **Инструменты разработчика** — сервисы для оптимизации разработки и тестирования приложений.

- **Бессерверные вычисления** — сервисы для хранения данных и разработки приложений без создания виртуальных машин.

  > Сервисы группы **Бессерверные вычисления** позволяют:
  >
  > - запускать код в бессерверной архитектуре приложений (Yandex Cloud Functions);
  > - работать с устройствами интернета вещей (Yandex IoT Core);
  > - обмениваться данными между приложениями через сервис очередей (Yandex Message Queue);
  > - работать с базой данных с тарификацией по количеству запросов (Yandex Managed Service for YDB);
  > - применять сервис для управления API-шлюзами (Yandex API Gateway).

- **Безопасность** — управление ключами шифрования и TLS-сертификатами, защита от DDoS-атак.

  > Сервисы этой группы позволяют:
  >
  > - управлять ключами шифрования (Yandex Key Management Service);
  > - защищать ресурсы от DDoS-атак (Yandex DDoS Protection);
  > - создавать и хранить логины и пароли, ключи сертификатов серверов, ключи сервисного аккаунта в облаке и других конфиденциальных данных (Yandex Lockbox);
  > - управлять TLS-сертификатами (Yandex Certificate Manager).

- **Ресурсы и управление** — идентификация и контроль доступа к облачным ресурсам, управление ресурсами в каталогах и облаках.

  > С их помощью вы можете:
  >
  > - идентифицировать и контролировать доступ к облачным ресурсам (Yandex Identity and Access Management);
  > - собирать и визуализировать метрики (Yandex Monitoring);
  > - управлять ресурсами в каталогах и облаках (Yandex Resource Manager);
  > - управлять сервисами организации (Yandex Cloud Organization);
  > - читать и записывать логи сервисов и пользовательских приложений (Yandex Cloud Logging).

- **Машинное обучение** — можно строить современные решения на базе технологий искусственного интеллекта: речевые технологии, анализ изображений и машинный перевод.

  > - Yandex SpeechKit и Yandex Translate позволяют работать с голосом и текстом, 
  > - Yandex Vision — анализировать изображения
  > - Yandex DataSphere — создавать модели машинного обучения.

- **Бизнес-инструменты** — визуализация и анализ данных, хранение базы знаний, трекер задач для организации работы команды.

  > - объединяет инструменты для организации работы команды (Yandex Tracker), 
  > - создания базы знаний (Yandex Wiki), 
  > - настройки форм (Yandex Forms), 
  > - визуализации и анализа данных (Yandex DataLens)
  > - сервис удаленных рабочих мест в облаке (Yandex Cloud Desktop).

### Внутри облака

Любые облака всегда начинаются с серверов, точнее с центров обработки данных (ЦОД), или дата-центров (ДЦ), где эти серверы строят.

> Инфраструктура Yandex Cloud состоит из трёх дата-центров. Они расположены в Подмосковье, Владимирской и Рязанской областях и связаны между собой собственными оптоволоконными сетями.

**Зона доступности** - представляет собой независимый сегмент облачной инфраструктуры. 

Три зоны доступности: 

-  `ru-central1-a` 
- `ru-central1-b` 
- `ru-central1-c`

Каждая зона отдельные ДЦ, независимые друг от друга. (сбой в одном не влияет на другие)

Серверное оборудование в узле собственной разработки:

- спроектировано с учетом допустимой рабочей температуры, 

- напряжение на сервере 24 В, 

- дисковое оборудование с возможностью горячей замены

### Доступ к ресурсам

Принципы использования платформы Yndex Cloud

- **ИЕРАРХИЯ РЕСУРСОВ** 

  **ресурсы** - сущности, которые можно создать (ВМ, диски, виртуальные сети). 

  Они объединены в группы - **каталоги** 

  **Облако** - самая крупная логическая единица, она изолирована (ресурсы в облаке не могут взаимодействовать с ресурсами в другом облаке)

  >  Облако (проект) 	<--	Каталоги (каталог1, каталог2 ...) 	<--	Ресурсы (ВМ, диски, сети)
  >
  > Поскольку в одном облаке может быть много каталогов, в общем случае достаточно простой иерархии: один проект — один каталог внутри общего облака на компанию. Но если проектов и направлений много, иерархию можно построить иначе. Например, в вашей компании два больших направления: разработка игр и разработка систем интернета вещей. Для каждого направления создайте облако, для каждого проекта — каталог, а в каталог поместите ресурсы, которые касаются только этого проекта.

- **РОЛИ**

  Роли бывают двух типов:

  - **Примитивные**

    содержат разрешения, действующие для всех типов ресурсов Yandex Cloud. 

    Это роли

    -  `admin`,

      > Просматривать инф. о ресурсах 
      >
      > Управлять ресурсами
      >
      > Настраивать доступ к ресурсам для других пользователей

    -  `editor` 

      > Просматривать инф. о ресурсах
      >
      > Управлять ресурсами

    - `viewer`.

      > Просматривать инф. о ресурсах

  - **Сервисные**

    их много, тк они зависят от логики работы сервисов

    > Например, у Yandex Resource Manager есть две сервисные роли:
    >
    > - `resource-manager.clouds.owner` — назначается только на облако, даёт полный доступ к облаку и ресурсам в нём;
    > - `resource-manager.clouds.member` — роль необходима для доступа к ресурсам в облаке другим пользователям без административных прав.

    В иерархии Облако → Каталог → Ресурс роли наследуются: 

    - `resource-manager.clouds.owner` 

      может выполнять любые действия с любым ресурсом в любом каталоге;

    - пользователь с ролями `resource-manager.clouds.member` 

      на облако и `editor` на облако может управлять любыми ресурсами в любом каталоге;

    - `editor` каталога может управлять ресурсами только в своём каталоге.

    У каждого облака обязательно должен быть хотя бы один владелец (`owner`). У пользователя может быть роль `owner` в нескольких облаках.

  > Сервис Yandex Resource Manager определяет ресурсную модель Yandex Cloud и позволяет структурировать ресурсы с помощью каталогов. С его помощью вы также можете назначить пользователю роли, определяющие, какие действия этот пользователь может выполнять с доступными ресурсами.

- **ПОЛЬЗОВАТЕЛИ**

  Пользователем называется человек или программа, которые взаимодействуют с ресурсами. Они идентифицируются при помощи аккаунтов, их три:

  - Яндекс ID 

    > единый аккаунт человека во всех сервисах Яндекса;

  - Федеративный аккаунт 

    > акк. человека во внешних по отношению к Яндексу системах (апример, аккаунт в Microsoft Active Directory — популярной системе хранения информации о корпоративных пользователях;)

  - Сервисный аккаунт

    > акк. от имени которого программы могут управлять ресурсами



> Сервис Yandex Identity and Access Management (IAM) проверяет права пользователей на действия с ресурсами. Проверка прав называется авторизацией.
>
> Чтобы пользователь подтвердил личность, он должен пройти аутентификацию. Её способы зависят от типа аккаунта. Например, с Яндекс ID аутентификация происходит автоматически. Сервисные аккаунты аутентифицируются с помощью IAM-токена, API-ключей или статических ключей доступа. 