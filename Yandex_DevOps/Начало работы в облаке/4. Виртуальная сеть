### Виртуальные сети, подсети, IP-адресация

**Сети и подсети**

Физические серверы соединяются между собой физической сетью. Виртуальные сервера соединяются между собой поверх физической сети, виртуальной сетью. 

Чтобы соединить несколько виртуальных машин, необходимо создать облачную сеть. ВМ и базы данных в одной сети видят друг друга, те что в разных - нет. Кроме облачной сети необходима еще и подсеть - подмножество сети в конкретной зоне доступности

> по умолчанию для одной зоны создается одна подсеть (но этим можно управлять)

**IP-адреса**

При создании подсети можно выбрать, какие IP-адреса будут выдаваться устройствам в этой подсети. Для этого можно выбрать любой диапазон адресов из:

- 10.0.0.0/8
- 172.16.0.0/12
- 192.168.0.0/16

> эти диапазоны зафиксированы в  [стандарте RFC1918](https://datatracker.ietf.org/doc/html/rfc1918) как немаршрутизируемые в интернете и используются только в локальных сетях.

Стоит учесть что:

- длина префекса от /16 до /28

> Подсеть `10.0.0.0/17` создать можно, а `10.0.0.0/15` или `10.0.0.0/29` — нет.

- первые два адреса подсети выделяются под:
  - шлюз (`x.x.x.1` для маски сети `/24`)
  - DNS-сервер  (`x.x.x.2` для маски сети `/24`)

> использовать их под адреса ВМ или других ресурсов не получится

- Внутри облачной сети диапазоны IP-адресов не могут пересекаться, но если вне облачной сети, то могут, тк они изолированы друг от друга

> Внутренние IP-адреса не меняются в течении всего времени существования облачного ресурса, при создании их можно выбрать или они будут выбраны автоматически в выбранной подсети

ВМ или БД можно выдать так же публичный адрес, он будет принадлежать маршрутизируемому диапазону (например `130.193.32.0/19`), при помощи этого адреса облачные ресурсы могут обмениваться данными с интернетом или другими ресурсами из других облачных сетей. 

Публичные адреса сопоставляются с внутренними  с помощью [one-to-one NAT](https://ru.wikipedia.org/wiki/NAT), те одному внешнему адресу соот один ресурсу в конкретной облачной сети.

> NAT - это механизм в сетях TCP/IP который позволяет изменять IP-адреса, то есть внутренние адреса могут взаимодействовать с внешними при помощи этого механизма.

### Создание новой сети с подсетями и ВМ

Облачные сети (Virtual Private Cloud, VPC) являются частью публичного облака, которая соединяет ресурсы воедино 

> (пользовательские, инфраструктурные, платформенные и прочие)
>
> Изначально при создании облака в нем появляются автоматически подсети, но их может не хватить

**Создание единой для всех ресурсов облака изолированную сеть с ВМ и другими объектами инфраструктуры**

по алгоритму из [урока2](https://practicum.yandex.ru/trainer/ycloud/lesson/1da0fe85-3837-4eb4-8071-28199a413c83/)

Чтобы ВМ полноценно заработала, необходимо организовать доступ в интернет. Есть 3 способа:

- [Назначить](https://cloud.yandex.ru/docs/compute/operations/vm-control/vm-attach-public-ip) машине публичный IP-адрес
- [Включить NAT](https://cloud.yandex.ru/docs/vpc/operations/enable-nat)  для подсети
- Установить NAT-сервер и создать соответсвующий маршрут

> для безопасности лучше выбрать 2 или 3 вариант, чтобы у сервера не было прямого доступа в интернет, в этом случае нужно устанавливать отдельный сервер (бастион-хост), который будет противостоять атакам извне. 

**Проверка доступа сервера:**

В командной строке ввести команду:
`ping <публичный IP-адрес сервера>`

> по умолчанию эта команда будет продолжать отправлять эхо-запросы на дисплей до тех пор, пока не будет получено прерывание (Ctrl-C) [БОЛЬШЕ ТУТ](https://www.ibm.com/docs/en/power6?topic=commands-ping-command)

### Публичные IP-адреса

**Внутренние IP-адреса** - ВМ доступны только внутри облачной сети

**Публичные IP-адреса** (белые или внешние) - ВМ  видна и внешнему миру. 

> Он присваивается по умолчанию при создании облачного ресурса с публичным адресом (если выставлены соотв. настройки). Адрес по умолчанию динамический (с запуском ресурса обновляется)

**Динамические IP-адреса** - освобождаются при остановке ресурса и сохраняются при перезагрузки. 

**Статические IP-адреса** в любом случае сохранятся, а также их можно зарезервировать и использовать позже, даже если они не привязаны к ресурсу

### Статическая маршрутизация

можно направлять трафик из подсети на заданные диапазоны IP-адресов через ВМ, указанные в качестве [шлюза](https://is.gd/lEbrCJ) (next hop). 

> Для этого используются таблицы маршрутизации, они содержат статические маршруты, состоящие из префикса целевой подсети в нотации [CIDR](https://is.gd/Qddafk) и внутреннего IP-адреса шлюза

Чтобы создать таблицу маршрутизации со статическим маршрутом:

1. Virtual Private Cloud - Таблицы маршрутизации - Создать таблицу маршрутизации.
2. Указать название таблицы - добавить статический маршрут - Нажать на кнопку создать таблицу маршрутизации

Таблица маршрутизации привязывается к подсети и не может содержать префиксов. Трафик из подсети с привязанной таблицей будет направляться к указанным в  маршрутах префиксам через соответствующий адрес шлюза.

> Префикс 0.0.0.0/0 в маршруте значит, что весь трафик уйдет через указанный этим префиксом шлюз, если он не направлен по другим шлюзам.

Пример: к подсети с CIDR 10.1.0.0/24 привязана таб.марш с такими маршрутами:

|     **Имя**     |  **Префикс**   | **Шлюз**  |
| :-------------: | :------------: | :-------: |
| another-network | 192.168.0.0/16 | 10.1.0.5  |
|    internet     |   0.0.0.0/0    | 10.1.0.10 |

Трафик в подсеть 192.168.0.0/16 (которая в другой виртуальной сети (ВС)) будет направляться через ВМ с адресом 10.1.0.5 (с условием что у ВМ есть интерфейс в другой ВС). Остальной трафик уйдет черех ВМ 10.1.0.10, при этом переопределение маршрута для префикса 0.0.0.0/0 может повлиять на внешнюю доступность ВМ из подсети с таблицей, где есть такой маршрут.

> В Yandex Cloud поддерживаются префиксы назначенные только вне виртуальной среды (для другой сети или вашей локальной)
>
> При создании маршрута в качестве шлюза можно указать внутренний IP-адрес, который еще не используется (не привязан к ВМ), в этом случае он заработает, когда запустится ВМ с соотв IP-адресом

**Для чего используют статические маршруты** 

Две схемы ([урок4](https://practicum.yandex.ru/trainer/ycloud/lesson/eaa7c160-efbf-4c73-bf74-4ce4c24331e2/)):

1. Сетевой маршрут строится до нужного префикса через одну ВМ. В качестве шлюза используется внутренний IP-адрес NAT INSTANCE 1
2. Отказоустойчивая схема с маршрутами в нескольких зонах доступности. 

> Создаются ВМ в разных зонах доступности и прокладываются через них маршруты до одной подсети назначения. Если ВМ в одной зоне выйдет из строя - у ВМ других зон сохранится связанность с подсетью назанчения.

**Изменение маршрутов трафика в интернете**

Если префикс назначения у маршрута из таблицы указан префикс адресов из интернета, то доступ к таким адресам и с таких адресов станет невозможным через публичные IP-адреса ВМ из подсетей, к которым привязана эта таблица

> Допустим есть vm-1 (ВМ) с публичным IP-адресом, подключенная к подсети my-subnet. Если к подсети првязать таблицу my-route-table с маршрутом для префикса 0.0.0.0/0 (все адреса) через шлюз 10.0.0.5 то доступ через публичный адрес к vm-1 пропадет. 
>
> Это произойдет потому что весь трафик в подсеть ранее шедший в my-subnet, теперь будет направляться через адрес шлюза

Чтобы сохранить входящую связность с облачными ресурсами через публичный адрес можно:

- вынести ресурсы с публичным адресом в отдельную подсеть
- вместо настройки маршрута в интернет ключить для подсети  [доступ в интернет через NAT](https://cloud.yandex.ru/docs/vpc/operations/enable-nat)

### Группы безопасности 

они выполняют функцию межсетевого экрана и позволяют контролировать и фильтровать входящий и исходящий трафик ВМ в соответсвии с заданными правилами (другое название - Брендмауэр)

> В консоли управления этот инструмент находится в разделе **Virtual Private Cloud**. Чтобы переключиться на него, нужно нажать кнопку **Группы безопасности** (значок щита) в панели слева. 
>
> Если кнопки нету, то для создания группы нужно перейти по ссылке https://console.cloud.yandex.ru/link/vpc/security-groups. После создания первой группы безопасности, кнопка появится на боковой панели каждой облачной сети.

Группа безопасности назначается сетевому интерфейсу при создании или изменении ВМ и содержит правила получения и отправки трафика

**Главный принцип** - запрещено все, что не разрешено явно

> если назначить сетевому интерфейсу ВМ группу безопасности без правил, ВМ не сможет передавать и принимать трафик и у вас не получится зайти на нее по SSH

**Правила** 

1. Нажать на кнопку Создать группу
2. Добавить для нее правила: определить протоколы и IP-адреса для приема и отправки трафика

Если сетевому интерфейсу ВМ назначены несколько групп безопасности, то учитываются правила из всех групп. На ВМ поступит трафик, попадающий хотя бы под одно из правил в группах 

> Правила хранят состояния сессий, группы безопасности отслеживают состояние соединений и сопоставляют трафик ответа с уже открытой сессией, чтобы разрешить его прием
>
> Пример: правило позволяет ВМ создать исходящую сессию на 80-й порт какого либо IP-адреса. Значит ответы от 80-го порта на источник, откуда отправлялся запрос, будут автоматически разрешены.

**Виды правил:**

Определяют диапазоны адресов и портов или другие группы безопасности:

- Для входящего трафика
  <u>откуда</u> ВМ могут <u>принимать</u> трафик
- Для исходящего
  <u>куда</u> ВМ могут <u>отправлять</u> трафик

> Если есть правило на для исходящего но нет для входящего, то ответный трафик все равно будет поступать. Но если разрешен только входящий, то ВМ сможет лишь отвечать на запросы, но не инициировать их.

Если 2 ВМ находятся в одной группе безопасности без правил, они не смогут обмениваться трафиком. А в таком случае, можно выбрать любое решение:

- Правило self для все группы (разрешит любой трафик между ресурсами в одной группе безопасности)
- Точно указать адреса и порты ресурсов в правилах

**IP-адреса и диапазоны адресов**

В правилах можно разрешить прием и отправку трафика на IP-адреса или диапазоны адресов. 

- Нужно указать конкретный IP-адрес в правилах с помощью CIDR с маской /32

Чтобы разрешить передачу трафика на любые адреса по любым протоколам, нужно указать:

-  CIDR 0.0.0.0 с маской /0  и в поле выбора протокола "любой"

Группы безопасности не блокируют отправку трафика на адреса сервисов, необходимых для работы ВМ и виртуальной сети:

- Адрес сервера метаданных - 169.254.169.254
- Адрес DNS-сервера - второй по порядку IP-адрес (обычно х.х.х.2) в каждой подсети

Чтобы [сетевой балансировщик](https://cloud.yandex.ru/docs/network-load-balancer/concepts/) мог проверять состояние подключённых к нему ресурсов, необходимо разрешить передачу трафика между диапазонами адресов `198.18.235.0/24` и `198.18.248.0/24` и целевыми ресурсами.

**Параметры по умолчанию**

> Если не указано иное, группа безопасности автоматически создается в новой сети и назначается ВМ при подключении к подсетям новой сети, если у них нет ни одной группы безопасности .

Группа безопасности создается с рядом правил:

- Разрешен любой исходящий трафик
- Для входящего трафика разрешен:
  - трафик от членов той же группы безопасности
  - SSH-соединения на порт 22 (по TCP) с любых адресов (0.0.0.0/0)
  - RDP-соединения на порт 3389 (по TCP) с любых адресов (0.0.0.0/0)
  - любой входящий трафик по протоколу ICMP с любых адресов (0.0.0.0/0)

### Создание группы безопасности и открываем доступ к серверу

Создаю первую группу безопасности и делаю доступными страницы предоставляемые веб-сервером NGINX. 

1. Для первого раза нужно перейти по ссылке: https://console.cloud.yandex.ru/link/vpc/security-groups
2. Нажать кнопку "создать группу"
3. Дать имя (я дал: yc-security)
4. Указать сеть (yc)

Добавить правила:

1. Для исходящего трафика:
   диапазон портов 80 (HTTP) и протокол TCP, назначение "CIDR" 0.0.0.0/0
   По аналогии для портов 443 (HTTPS) и 22 (SSH)
2. Для входящего трафика:
   для портов 80 и 22 чтобы подключаться к веб-серверу и управлять ВМ извне

> Если инициировано соединение по определенному порту и протоколу с ВМ и есть исходящее правило, то значит и на входящий трафик будет разрешена передача данных в эту же сеть, на этот же протокол и порт.
>
> Если назначить сетевому интерфейсу ВМ группу безопасности без правил, ВМ не сможет передавать и принимать трафик.

Для проверки нужна ВМ подключенная к сети, к которой были созданы правила (у меня это "yc", я при создании ВМ выбрал ее подсеть)

​	После подключения по SSH установим веб-сервер NGIN (по умолчанию он отсутствует): `sudo apt-get install nginx`
Установка возможна поскольку по правилам открыть 80 порт: команда apt-get использует его для получения пакетов с ПО.

​	После установки сервер автоматически запустится и будет доступен извне благодаря открытому порту 80. Чтобы проверить нужно зайти через браузер на публичный IP-адрес ВМ. 

> но ничего не сработает если не обновить ВМ как в [уроке 3](https://practicum.yandex.ru/trainer/ycloud/lesson/467fb1f2-7eb4-421c-a33c-117e1cf86b66/)  

